[{"C:\\DEV\\jb-board\\src\\index.js":"1","C:\\DEV\\jb-board\\src\\App.js":"2","C:\\DEV\\jb-board\\src\\reportWebVitals.js":"3","C:\\DEV\\jb-board\\src\\pages\\board\\Humor.js":"4","C:\\DEV\\jb-board\\src\\components\\navbar\\Navbar.js":"5","C:\\DEV\\jb-board\\src\\pages\\signup\\Signup.js":"6","C:\\DEV\\jb-board\\src\\pages\\home\\Home.js":"7","C:\\DEV\\jb-board\\src\\pages\\board\\Society.js":"8","C:\\DEV\\jb-board\\src\\pages\\template\\post-view-template\\post-view.js":"9","C:\\DEV\\jb-board\\src\\components\\navbar\\SidebarData.js":"10","C:\\DEV\\jb-board\\src\\pages\\home\\cate-cards.js":"11","C:\\DEV\\jb-board\\src\\pages\\home\\mock-card-data.js":"12","C:\\DEV\\jb-board\\src\\pages\\template\\post-view-template\\mock-post-view.js":"13","C:\\DEV\\jb-board\\src\\components\\sign-in-modal\\sign-in-modal.js":"14","C:\\DEV\\jb-board\\src\\pages\\template\\board-template\\board-template.js":"15","C:\\DEV\\jb-board\\src\\pages\\template\\write-post-template\\write-post.js":"16"},{"size":587,"mtime":1611292573891,"results":"17","hashOfConfig":"18"},{"size":1046,"mtime":1611619716905,"results":"19","hashOfConfig":"18"},{"size":375,"mtime":1611292573900,"results":"20","hashOfConfig":"18"},{"size":333,"mtime":1611292573892,"results":"21","hashOfConfig":"18"},{"size":2339,"mtime":1611292573889,"results":"22","hashOfConfig":"18"},{"size":8199,"mtime":1611292573896,"results":"23","hashOfConfig":"18"},{"size":389,"mtime":1611292573893,"results":"24","hashOfConfig":"18"},{"size":168,"mtime":1611292573892,"results":"25","hashOfConfig":"18"},{"size":1787,"mtime":1611292573900,"results":"26","hashOfConfig":"18"},{"size":494,"mtime":1611292573889,"results":"27","hashOfConfig":"18"},{"size":807,"mtime":1611292573894,"results":"28","hashOfConfig":"18"},{"size":1467,"mtime":1611292573894,"results":"29","hashOfConfig":"18"},{"size":584,"mtime":1611292573899,"results":"30","hashOfConfig":"18"},{"size":3386,"mtime":1611292573890,"results":"31","hashOfConfig":"18"},{"size":3763,"mtime":1611618392189,"results":"32","hashOfConfig":"18"},{"size":2133,"mtime":1611636514788,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"25f2jy",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\DEV\\jb-board\\src\\index.js",[],["69","70"],"C:\\DEV\\jb-board\\src\\App.js",[],"C:\\DEV\\jb-board\\src\\reportWebVitals.js",[],"C:\\DEV\\jb-board\\src\\pages\\board\\Humor.js",[],"C:\\DEV\\jb-board\\src\\components\\navbar\\Navbar.js",[],"C:\\DEV\\jb-board\\src\\pages\\signup\\Signup.js",[],"C:\\DEV\\jb-board\\src\\pages\\home\\Home.js",[],"C:\\DEV\\jb-board\\src\\pages\\board\\Society.js",[],"C:\\DEV\\jb-board\\src\\pages\\template\\post-view-template\\post-view.js",["71","72","73"],"import React, {useEffect, useState} from 'react';\r\nimport './post-view.css'\r\nimport * as FiIcons from \"react-icons/fi\";\r\nimport axios from \"axios\";\r\n\r\nimport mockPostViewData from './mock-post-view'\r\n\r\nfunction PostView({ match }) {\r\n\r\n  const [upCount, setUpCount] = useState(100);\r\n  const [downCount, setDownCount] = useState(20);\r\n  const [postNo, setPostNo] = useState(match.params.postNo);\r\n  const [post, setPost] = useState({});\r\n  const [loading, setloading] = useState(false);\r\n\r\n  const getPost = async (postNo) => {\r\n    try {\r\n      const result = await axios.get('/board/humor/search', {params: {postNo: postNo}});\r\n      if (!loading) setPost(result.data[0]);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getPost(postNo);\r\n    return () => {\r\n      setloading(true);\r\n    }\r\n  }, [])\r\n\r\n  const thumbsUp = () => {\r\n    setUpCount(upCount + 1);\r\n  }\r\n  const thumbsDown = () => {\r\n    setDownCount(downCount + 1);\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"post-wrapper\">\r\n        <div className=\"inner-post-wrapper\">\r\n          <h2 className=\"post-view-title\">{post?.title}</h2>\r\n          <div className=\"post-view-contents\">\r\n            {post?.contents}\r\n          </div>\r\n          <div className=\"post-view-reply\">\r\n            {post?.comment}\r\n          </div>\r\n          <div className=\"thumb-icons\">\r\n            <div className=\"thumbs-up\" onClick={thumbsUp}>\r\n              <FiIcons.FiThumbsUp />\r\n            </div>\r\n            <span>{upCount}</span>\r\n            <div className=\"thumbs-down\" onClick={thumbsDown}>\r\n              <FiIcons.FiThumbsDown />\r\n            </div>\r\n            <span>{downCount}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PostView;\r\n","C:\\DEV\\jb-board\\src\\components\\navbar\\SidebarData.js",[],"C:\\DEV\\jb-board\\src\\pages\\home\\cate-cards.js",[],"C:\\DEV\\jb-board\\src\\pages\\home\\mock-card-data.js",[],"C:\\DEV\\jb-board\\src\\pages\\template\\post-view-template\\mock-post-view.js",[],"C:\\DEV\\jb-board\\src\\components\\sign-in-modal\\sign-in-modal.js",[],"C:\\DEV\\jb-board\\src\\pages\\template\\board-template\\board-template.js",["74"],"import React, {useEffect, useState} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './board-template.css'\r\nimport axios from \"axios\";\r\nimport \"moment/locale/ko\";\r\nimport moment from \"moment\";\r\n\r\nfunction BoardTemplate({ boardCate }) {\r\n\r\n  const [postList, setPostList] = useState([]);\r\n  const [loading, setloading] = useState(false);\r\n\r\n\r\n  // post 등록 시간이 1일 이전 일 경우 'yyyy-MM-dd' 포멧으로 날짜 리턴, 아닐 경우 'xx 전' type 으로 리턴\r\n  const calPostTime = (item) => {\r\n    console.log(moment(item.regTime).format(\"yyyy-MM-dd HH:mm:ss\"));\r\n    let postRegTime = moment(item.regTime);\r\n    let diffTime = postRegTime.diff(moment(), 'days');\r\n    if (diffTime <= -1) {\r\n      // console.log(diffTime);\r\n      // console.log('1111111111');\r\n      return moment(item.regTime).format('YYYY-MM-DD');\r\n    } else {\r\n      // console.log(diffTime);\r\n      // console.log('222222222');\r\n      // return '2222222';\r\n      return moment(item.regTime).fromNow();\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    async function getPostList (boardCate) {\r\n      try {\r\n        const result = await axios.get(`/board/${boardCate}/searchAll`);\r\n        if (!loading) setPostList(result.data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n    getPostList(boardCate)\r\n      .then(() => console.log('load post success!'))\r\n      .catch((error) => console.log(error));\r\n    return () => {\r\n      setloading(true);\r\n    }\r\n  }, []);\r\n\r\n  // const searchTest = () => {\r\n  //   axios({\r\n  //     method: 'GET',\r\n  //     url: '/board/humor/search'\r\n  //   }).then((res) => {\r\n  //     console.log(res);\r\n  //   }).catch((error) => {\r\n  //     console.log(error);\r\n  //   })\r\n  // }\r\n  //\r\n  // const uploadTest = () => {\r\n  //   axios({\r\n  //     method: 'POST',\r\n  //     url: '/board/humor/upload',\r\n  //     data: data\r\n  //   }).then((res) => {\r\n  //     console.log(res);\r\n  //   }).catch((error) => {\r\n  //     console.log(error);\r\n  //   })\r\n  // }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"page-wrapper\">\r\n        <div className=\"inner-page-wrapper\">\r\n          <h1 className=\"page-title\">\r\n            {/*<span className=\"page-icon\">{postData.page_icon}</span>*/}\r\n            {/*{postList.boardCate}</h1>*/}\r\n            {boardCate}</h1>\r\n          <div className=\"post-list\">\r\n            <div className=\"post-list-header\">\r\n              <div>제목</div>\r\n              <div>작성자</div>\r\n              <div>추천수</div>\r\n              <div>작성시간</div>\r\n            </div>\r\n            {postList.map((item, index) => {\r\n              return (\r\n                <li key={index} className=\"post-title\">\r\n                  <div className=\"post-grid-container\">\r\n                    <Link to={`/board/humor/${item.postNo}`}>\r\n                      <span>{item.title}</span>\r\n                    </Link>\r\n                    <div className=\"post-detail-grid-container\">\r\n                      <div>{item.writer}</div>\r\n                      <div>{item.recommendCount}</div>\r\n                      <div>{item.regTime ? calPostTime(item) : ''}</div>\r\n                      {/*<div>{item.regTime ? moment(item.regTime).format('YYYY-MM-DD') : ''}</div>*/}\r\n                      {/*<div>{moment(item.regTime).fromNow()}</div>*/}\r\n                    </div>\r\n                  </div>\r\n                </li>\r\n              )\r\n            })}\r\n          </div>\r\n          {/*<button onClick={searchTest}>search test</button>*/}\r\n          {/*<button onClick={uploadTest}>upload test</button>*/}\r\n          <div className='write-button-container'>\r\n            <Link to={'/write'}>글쓰기</Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default BoardTemplate;\r\n","C:\\DEV\\jb-board\\src\\pages\\template\\write-post-template\\write-post.js",[],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":6,"column":8,"nodeType":"81","messageId":"82","endLine":6,"endColumn":24},{"ruleId":"79","severity":1,"message":"83","line":12,"column":18,"nodeType":"81","messageId":"82","endLine":12,"endColumn":27},{"ruleId":"84","severity":1,"message":"85","line":30,"column":6,"nodeType":"86","endLine":30,"endColumn":8,"suggestions":"87"},{"ruleId":"84","severity":1,"message":"88","line":46,"column":6,"nodeType":"86","endLine":46,"endColumn":8,"suggestions":"89"},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"no-unused-vars","'mockPostViewData' is defined but never used.","Identifier","unusedVar","'setPostNo' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getPost' and 'postNo'. Either include them or remove the dependency array.","ArrayExpression",["92"],"React Hook useEffect has missing dependencies: 'boardCate' and 'loading'. Either include them or remove the dependency array.",["93"],"no-global-assign","no-unsafe-negation",{"desc":"94","fix":"95"},{"desc":"96","fix":"97"},"Update the dependencies array to be: [getPost, postNo]",{"range":"98","text":"99"},"Update the dependencies array to be: [boardCate, loading]",{"range":"100","text":"101"},[840,842],"[getPost, postNo]",[1425,1427],"[boardCate, loading]"]